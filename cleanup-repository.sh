#!/bin/bash

# Script para limpeza do reposit√≥rio
# Remove arquivos tempor√°rios e desnecess√°rios do controle de vers√£o

set -e

echo "üßπ Iniciando limpeza do reposit√≥rio..."
echo "=========================================="

# Verificar se estamos em um reposit√≥rio Git
if [ ! -d ".git" ]; then
    echo "‚ùå Erro: Este n√£o √© um reposit√≥rio Git"
    exit 1
fi

# Verificar se h√° mudan√ßas n√£o commitadas
if [ -n "$(git status --porcelain)" ]; then
    echo "‚ö†Ô∏è  Aviso: H√° mudan√ßas n√£o commitadas no reposit√≥rio"
    echo "Deseja continuar? (y/N)"
    read -r response
    if [[ ! "$response" =~ ^[Yy]$ ]]; then
        echo "‚ùå Opera√ß√£o cancelada"
        exit 1
    fi
fi

echo "üìã Criando backup dos arquivos que ser√£o removidos..."
mkdir -p .backup-cleanup

# Lista de arquivos para backup e remo√ß√£o
FILES_TO_REMOVE=(
    ".last-deploy"
    "test-assuntos-local.cjs"
    "test-fallback.cjs"
    "test-important-memories.cjs"
    "test-insert-with-anon-key.cjs"
    "monitor-supabase-usage.cjs"
    "check-database-tables.cjs"
    "execute-sql-script.cjs"
    "populate-database.cjs"
    "create-sample-data-existing-columns.js"
    "create_weekly_notifications_table.sql"
    "disable-rls-and-insert.sql"
    "fix-chamados-final.sql"
    "fix-custom-events-complete.sql"
    "fix-custom-events-table.sql"
    "fix-important-memories.sql"
    "insert-all-shortcuts.sql"
    "insert-sample-chamados.sql"
    "insert-test-chamados.js"
    "populate-database.sql"
)

# Documenta√ß√£o para consolida√ß√£o
DOC_FILES_TO_REMOVE=(
    "CHATBOT_SEARCH_IMPROVEMENTS_SUMMARY.md"
    "CORRECAO_CHATBOT_TRT15.md"
    "CORRE√á√ÉO_NOTIFICA√á√ïES_SEMANAIS.md"
    "DEPLOY_SUMMARY.md"
    "DEPLOY_SUMMARY_PRODUCTION.md"
    "IA_IMPLEMENTATION_SUMMARY.md"
    "IMPLEMENTACAO_ASSUNTOS_LOCAIS.md"
    "IMPROVEMENTS.md"
    "NOTIFICACOES_EVENTOS.md"
    "REMOCAO_MEMORIAS_IMPORTANTES.md"
    "RESUMO_SITUACAO_SUPABASE.md"
    "SECURITY_FIXES.md"
    "SECURITY_WORKFLOW_IMPROVEMENTS.md"
    "SOLUCAO_CALENDARIO_TRABALHO.md"
    "SOLUCAO_CHATBOT_MODO_OFFLINE.md"
    "SOLUCAO_CHATBOT_OFFLINE.md"
    "SOLUCAO_COMUNICACAO_IA.md"
    "SOLUCAO_EVENTOS_PERSONALIZADOS.md"
)

# Fazer backup dos arquivos
echo "üíæ Fazendo backup dos arquivos..."
for file in "${FILES_TO_REMOVE[@]}" "${DOC_FILES_TO_REMOVE[@]}"; do
    if [ -f "$file" ]; then
        cp "$file" ".backup-cleanup/" 2>/dev/null || true
        echo "  ‚úÖ Backup: $file"
    fi
done

# Criar arquivo consolidado de documenta√ß√£o
echo "üìö Consolidando documenta√ß√£o..."
echo "# üìñ Hist√≥rico de Desenvolvimento" > DEVELOPMENT_HISTORY.md
echo "" >> DEVELOPMENT_HISTORY.md
echo "Este arquivo consolida toda a documenta√ß√£o de desenvolvimento e implementa√ß√µes realizadas no projeto." >> DEVELOPMENT_HISTORY.md
echo "" >> DEVELOPMENT_HISTORY.md
echo "## üìÖ Gerado em: $(date)" >> DEVELOPMENT_HISTORY.md
echo "" >> DEVELOPMENT_HISTORY.md

# Consolidar arquivos de documenta√ß√£o
for file in "${DOC_FILES_TO_REMOVE[@]}"; do
    if [ -f "$file" ]; then
        echo "" >> DEVELOPMENT_HISTORY.md
        echo "## üìÑ $file" >> DEVELOPMENT_HISTORY.md
        echo "" >> DEVELOPMENT_HISTORY.md
        cat "$file" >> DEVELOPMENT_HISTORY.md
        echo "" >> DEVELOPMENT_HISTORY.md
        echo "---" >> DEVELOPMENT_HISTORY.md
        echo "" >> DEVELOPMENT_HISTORY.md
    fi
done

echo "‚úÖ Documenta√ß√£o consolidada em DEVELOPMENT_HISTORY.md"

# Remover arquivos do Git
echo "üóëÔ∏è  Removendo arquivos do controle de vers√£o..."
for file in "${FILES_TO_REMOVE[@]}"; do
    if [ -f "$file" ]; then
        git rm "$file" 2>/dev/null || true
        echo "  üóëÔ∏è  Removido: $file"
    fi
done

for file in "${DOC_FILES_TO_REMOVE[@]}"; do
    if [ -f "$file" ]; then
        git rm "$file" 2>/dev/null || true
        echo "  üóëÔ∏è  Removido: $file"
    fi
done

# Adicionar arquivos atualizados
echo "üìù Adicionando arquivos atualizados..."
git add .gitignore
git add DEVELOPMENT_HISTORY.md
git add ARQUIVOS_PARA_EXCLUSAO.md

echo "üìä Estat√≠sticas da limpeza:"
echo "  ‚Ä¢ Arquivos de script removidos: ${#FILES_TO_REMOVE[@]}"
echo "  ‚Ä¢ Arquivos de documenta√ß√£o consolidados: ${#DOC_FILES_TO_REMOVE[@]}"
echo "  ‚Ä¢ Backup criado em: .backup-cleanup/"
echo "  ‚Ä¢ Documenta√ß√£o consolidada: DEVELOPMENT_HISTORY.md"

echo ""
echo "‚úÖ Limpeza conclu√≠da!"
echo ""
echo "üöÄ Pr√≥ximos passos:"
echo "  1. Revisar as mudan√ßas: git status"
echo "  2. Fazer commit: git commit -m 'üßπ Limpeza do reposit√≥rio'"
echo "  3. Fazer push: git push"
echo ""
echo "üí° Dicas:"
echo "  ‚Ä¢ Backup dos arquivos em: .backup-cleanup/"
echo "  ‚Ä¢ Documenta√ß√£o consolidada em: DEVELOPMENT_HISTORY.md"
echo "  ‚Ä¢ .gitignore atualizado para evitar arquivos desnecess√°rios"
echo ""
echo "‚ö†Ô∏è  Lembre-se de testar o projeto ap√≥s a limpeza!"